[gd_scene load_steps=14 format=3 uid="uid://docv0kjrjv85p"]

[ext_resource type="Texture2D" uid="uid://c3e7y8e0vq8iw" path="res://Assets/sprites/mini_capy-removebg-preview.png" id="1_fvddv"]

[sub_resource type="GDScript" id="GDScript_sd6n4"]
resource_name = "Player"
script/source = "extends CharacterBody2D

const SPEED = 220.0
const JUMP_VELOCITY = -200.0
const MAX_JUMP_PRESS_TIME = 0.2  # Maximum time in seconds to charge the jump
const MAX_JUMP_BOOST = 1.5  # Maximum multiplier for jump velocity

# Reference to the AnimatedSprite2D node
@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D

var jump_press_time := 0.0  # Time the jump key has been pressed
var is_jumping := false  # Whether the character is currently jumping
var can_increase_jump := false  # Whether the jump height can still be increased

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta
	else:
		is_jumping = false  # Reset jumping state when on the floor
		can_increase_jump = false  # Reset jump increase state

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_up\") and is_on_floor():
		# Start the jump immediately
		velocity.y = JUMP_VELOCITY
		is_jumping = true
		can_increase_jump = true
		jump_press_time = 0.0

	# Increase jump height while the key is held, but only during the ascent and within the time limit
	if Input.is_action_pressed(\"ui_up\") and is_jumping and can_increase_jump and velocity.y < 0:
		jump_press_time += delta
		# Stop increasing jump height after the maximum time is reached
		if jump_press_time >= MAX_JUMP_PRESS_TIME:
			can_increase_jump = false
		# Calculate the jump boost based on how long the key has been pressed
		var jump_boost = 1.0 + (jump_press_time / MAX_JUMP_PRESS_TIME) * (MAX_JUMP_BOOST - 1.0)
		velocity.y = JUMP_VELOCITY * jump_boost

	# Stop increasing jump height once the character starts falling
	if velocity.y >= 0:
		is_jumping = false
		can_increase_jump = false

	# Get the input direction and handle the movement/deceleration.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
		# Flip the sprite based on the direction
		if direction > 0:
			animated_sprite.flip_h = true  # Flip to face left
		elif direction < 0:
			animated_sprite.flip_h = false  # Flip to face right

		# Play the \"run\" animation if the sprite is moving
		if animated_sprite.animation != \"run\":
			animated_sprite.play(\"run\")
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		# Play the \"idle\" animation if the sprite is not moving
		if animated_sprite.animation != \"idle\":
			animated_sprite.play(\"idle\")

	move_and_slide()
"

[sub_resource type="AtlasTexture" id="AtlasTexture_4flbx"]
atlas = ExtResource("1_fvddv")
region = Rect2(43, 184, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_onrkg"]
atlas = ExtResource("1_fvddv")
region = Rect2(76, 184, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_i3pqv"]
atlas = ExtResource("1_fvddv")
region = Rect2(109, 184, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_hqtel"]
atlas = ExtResource("1_fvddv")
region = Rect2(141, 184, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_sweqy"]
atlas = ExtResource("1_fvddv")
region = Rect2(172, 185, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_2hs0m"]
atlas = ExtResource("1_fvddv")
region = Rect2(40, 82, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_1jxqw"]
atlas = ExtResource("1_fvddv")
region = Rect2(69, 82, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_dw050"]
atlas = ExtResource("1_fvddv")
region = Rect2(97, 82, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_b26j0"]
atlas = ExtResource("1_fvddv")
region = Rect2(124, 82, 30, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_n7ghd"]
atlas = ExtResource("1_fvddv")
region = Rect2(152, 82, 30, 40)

[sub_resource type="SpriteFrames" id="SpriteFrames_a36fj"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4flbx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_onrkg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i3pqv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hqtel")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sweqy")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hs0m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jxqw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dw050")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_b26j0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_n7ghd")
}],
"loop": true,
"name": &"run",
"speed": 5.0
}]

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_sd6n4")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_a36fj")
animation = &"idle"
frame_progress = 0.252412

[node name="Camera2D" type="Camera2D" parent="AnimatedSprite2D"]
drag_horizontal_enabled = true
drag_vertical_enabled = true

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
position = Vector2(2, -1)
polygon = PackedVector2Array(-10, -10, -14, -10, -15, -8, -15, -2, -7, -2, -7, 5, -7, 10, 0, 10, -1, 4, 1, 3, 1, 3, 3, 5, 4, 10, 10, 10, 10, 1, 8, -5, 3, -7, 1, -7, 2, -11, 0, -16, -7, -16, -10, -11)
